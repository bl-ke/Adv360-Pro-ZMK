
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    macro_qu: macro_qu{
        compatible = "zmk,behavior-macro";
        label = "macro_qu";
        #binding-cells = <0>;
        bindings = <&kp Q &kp U>;
    };
    qu: QU {
        compatible = "zmk,behavior-tap-dance";
        label = "qu";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&kp U>, <&macro_qu>;
    };
    jz: JZ {
        compatible = "zmk,behavior-tap-dance";
        label = "jz";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&kp J>, <&kp Z>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
  &none   &none   &none   &none   &none         &none                  &none                                                                                &none      &none   &none   &none   &none            &none   &none
  &none   &kp W   &kp G   &kp F   &kp B     &kp COLON                  &none                                                                                &none    &kp ESC   &kp L   &qu     &kp Y            &jz     &none
  &none   &kp O   &kp R   &kp S   &kp T     &kp MINUS                  &none      &none  &kp C_MUTE                     &kp C_VOL_DN        &kp C_VOL_UP    &none  &kp COMMA   &kp N   &kp A   &kp I            &kp P   &none
  &none   &kp X   &kp K   &kp C   &kp D  &kp QUESTION                  &none      &none       &none   &none   &none            &none               &none    &none    &kp DOT   &kp H   &kp M   &kp V  &macro_esc_tog3   &none
  &none   &none   &none   &none   &none                          &lt 1 SPACE  &lt 2 TAB  &caps_word                  &mt RCTRL ENTER  &mt RIGHT_ALT BSPC  &lt 3 E              &none   &none   &none            &none   &none
            >;
        };

        layer_symbols {
            bindings = <
  &none      &none             &none              &none      &none        &none             &none                                                   &none             &none     &none     &none     &none            &none   &none
  &none      &none            &kp AT          &kp POUND  &kp EQUAL  &kp PERCENT             &none                                                   &none         &kp CARET    &kp LT    &kp GT  &kp PIPE        &kp EQUAL   &none
  &none  &kp GRAVE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp UNDER    &kp MINUS             &none  &trans  &trans                  &trans  &trans   &none         &kp COLON  &kp LBRC  &kp RBRC  &kp SEMI            &none   &none
  &none  &kp TILDE          &kp EXCL           &kp AMPS  &kp UNDER     &kp STAR             &none   &none   &none   &none   &none   &none   &none   &none  &kp LEFT_BRACKET  &kp LPAR  &kp RPAR  &kp RBKT  &macro_esc_tog3   &none
  &none      &none             &none              &none      &none                         &trans  &trans   &to 0                   &to 2  &trans  &trans                       &none     &none     &none            &none   &none
            >;
        };

        layer_numeric {
            bindings = <
  &none   &none   &none   &none       &none     &none             &none                                                   &none       &none         &none  &trans   &none            &none   &none
  &none   &none   &none   &none    &kp STAR     &none             &none                                                   &none  &kp DOLLAR  &kp NUMBER_7  &kp N8  &kp N9        &kp EQUAL   &none
  &none   &none   &none   &none  &kp PERIOD  &kp PLUS             &none  &trans  &trans                  &trans  &trans   &none   &kp MINUS        &kp N4  &kp N5  &kp N6            &none   &none
  &none   &none   &none   &none    &kp FSLH     &none             &none   &none  &trans   &none   &none  &trans   &none   &none      &kp N0        &kp N1  &kp N2  &kp N3  &macro_esc_tog3   &none
  &none   &none   &none   &none       &none                      &trans  &trans   &to 0                   &to 1  &trans  &trans                     &none   &none   &none            &none   &none
            >;
        };

        layer_navigation {
            bindings = <
       &none   &none   &none   &none   &none      &none             &none                                                   &none     &none     &none   &none      &none   &none        &none
       &none   &none   &none   &none   &kp Y      &none             &none                                                   &none     &none     &kp B   &kp W      &none   &none        &none
       &none   &none   &none   &none   &kp V  &kp LC(V)             &none  &trans  &trans                  &trans  &trans   &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &none        &none
       &none   &none   &none   &none   &kp D      &none             &none   &none  &trans   &none   &none  &trans   &none   &none  &kp HOME     &none   &none    &kp END   &to 0        &none
 &bootloader   &none   &none   &none   &none                       &trans  &trans   &to 0                   &to 1  &trans  &trans               &none   &none      &none   &none  &bootloader
            >;
        };

        layer_Layer__4 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
